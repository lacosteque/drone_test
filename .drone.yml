kind: pipeline
type: docker
name: default

environment:
  HOME_DIR: nerd_build

steps:
- name: build bin
  image: alpine:latest
  volumes:
  - name: temp
    path: /tmp
  commands:
  - rm -rf "/tmp/$${HOME_DIR}/"
  - apk add --update --no-cache go
  - mkdir -p "/tmp/$${HOME_DIR}/usr/bin"
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o "/tmp/$${HOME_DIR}/usr/bin/hello" main.go

- name: make pkg
  image: alpine:latest
  environment:
    TZ: Europe/Moscow
    ARCH: x86_64
    RELEASE: 1.1.1
    NAME: nerd-build
    PKG: rpm
  volumes:
  - name: temp
    path: /tmp
  commands:
  - VERSION=$(date -d @$${DRONE_BUILD_STARTED})
  - apk add --update --no-cache tzdata && cp /usr/share/zoneinfo/$${TZ} /etc/localtime
  - VERSION1=$(date +'%Y%m%dT%H%M%S')
  - export PATH_FILE="/tmp/$${HOME_DIR}/$${NAME}-$${VERSION}-$${RELEASE}.$${ARCH}.$${PKG}"
  - apk add --no-cache ruby && gem install fpm
  - |
    if [ "$PKG" = "rpm" ]; then \
        apk add --no-cache rpm; \
    elif [ "$PKG" = "deb" ]; then \
        apk add --no-cache binutils tar; \
    fi
  - | 
    fpm -s dir -t $${PKG} \
        -p "$${PATH_FILE}" \
        -n "$${NAME}" \
        -v "$${RELEASE}" \
        -a "$${ARCH}" \
        -C "/tmp/$${HOME_DIR}" .
  - echo "$${PATH_FILE}" > "/tmp/$${HOME_DIR}/path.txt"
  depends_on:
  - build bin

  
- name: pull
  image: alpine:3.15
  environment:
    TG_TOKEN:
      from_secret: tg_token
    TO: -1001184051909
  volumes:
  - name: temp
    path: /tmp
  commands:
  - export PATH_FILE=$(cat "/tmp/$${HOME_DIR}/path.txt") 
  - apk add --update --no-cache curl
  - |
     curl -s "https://api.telegram.org/bot$${TG_TOKEN}/sendDocument" \
        -F chat_id="$${TO}" \
        -F parse_mode="HTML" \
        -F document=@$${PATH_FILE}
  depends_on:
  - make pkg
        
    
  

volumes:
- name: temp
  host:
    path: /tmp

volumes:
- name: temp
  temp: {}
